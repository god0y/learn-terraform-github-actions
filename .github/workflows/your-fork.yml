# name: Your Fork

# on:
#   pull_request_target:
#     types: [opened]

# jobs:
#   close:
#     if: github.repository == 'hashicorp/learn-terraform-github-actions'
#     runs-on: ubuntu-latest
#     steps:
#     - uses: superbrothers/close-pull-request@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         # Optional. Post a issue comment just before closing a pull request.
#         comment: "Hi! If you are following the Terraform GitHub Actions tutorial, please open the PR against [your personal fork](https://learn.hashicorp.com/tutorials/terraform/github-actions?in=terraform/automation#set-up-a-github-repository) of this repository. We will automatically close this PR, but if you intended to edit the example itself please feel free to re-open it."


name: release
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  semantic-version:
    name: "semantic-version"
    if: github.actor != 'ArbotCross'
    runs-on: ubuntu-latest
    concurrency: semantic-version
    permissions:
      id-token: write
      contents: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Set latest tag"
        id: set-latest-tag
        run: echo "LATEST_TAG=$(git tag | sort --version-sort | tail -n1)" >> $GITHUB_ENV

      - name: Semantic versioning
        id: versioning
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: 'v'
          major_pattern: "/^(feat!:|feat(.+)!:).*$/"
          major_regexp_flags: "g"
          minor_pattern: "/^(feat:|feat(.+):).*$/"
          minor_regexp_flags: "g"
          format: "v${major}.${minor}.${patch}"
          bump_each_commit: true
          bump_each_commit_patch_pattern: "/^(fix:|fix(.+):|perf:|perf(.+):) .+$/"

      - name: "Update package.json"
        run: |
            tmp=$(mktemp)
            cd vue
            cat package.json | jq --arg v "${{ steps.versioning.outputs.version }}" '.version = $v' > $tmp && mv $tmp package.json  
            cd .. && rm -rf .git/COMMIT_EDITMSG

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update package.json
          file_pattern: vue/package.json
          commit_user_name: GitHub Actions
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          commit_Author: ArbotCross <ArbotCross@users.noreply.github.com>
          push_options: --force

    outputs:
      version_tag: ${{ steps.versioning.outputs.version_tag }}
      version: ${{ steps.versioning.outputs.version }}
      latest_tag: ${{ env.LATEST_TAG }}
      skip: ${{ env.SKIP }} 

  release:
      name: "release"
      if: needs.semantic-version.outputs.skip != 'true'
      runs-on: ubuntu-latest
      concurrency: release
      needs: [semantic-version]
      permissions:
        id-token: write
        contents: write
      env:
        LATEST_TAG: ${{ needs.semantic-version.outputs.latest_tag }}
        VERSION_TAG: ${{ needs.semantic-version.outputs.version_tag }}
        VERSION: ${{ needs.semantic-version.outputs.version }}
      steps:
        
        - name: "Checkout"
          uses: actions/checkout@v4

        - name: Create Release
          uses: "marvinpinto/action-automatic-releases@latest"
          with:
            repo_token: "${{ secrets.JTPATGHPKG001 }}"
            title: "${{ env.VERSION_TAG }}"
            automatic_release_tag: "${{ env.VERSION_TAG }}"
            prerelease: false

        # - name: "Generate release changelog"
        #   uses: heinrichreimer/action-github-changelog-generator@v2.3
        #   with:
        #     working-directory: ./
        #     issues: false
        #     issuesWoLabels: false
        #     pullRequests: false
        #     prWoLabels: false
        #     excludeTagsRegex: "v[0-2]-[0-2]-*"
        #     output: ./CHANGELOG.md

        - uses: stefanzweifel/git-auto-commit-action@v5
          with:
            commit_message: ${{ env.VERSION_TAG }}
            file_pattern: CHANGELOG.md
            commit_user_name: GitHub Actions
            commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
            push_options: --force